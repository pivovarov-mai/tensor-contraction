# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1SnmQxwYa_MDdaZVApz-IT0vNBDehFCU9
"""

pip install ncon

import numpy as np
from ncon import ncon
import time

f=13
a=np.random.rand(f,f,f)
b=np.random.rand(f,f,f,f)
c=np.random.rand(f,f,f,f)
d=np.random.rand(f,f,f)
e=np.random.rand(f,f,f)

"""1 способ цикл for"""

def forr(a,b,c,d,e,f):
    ac = np.zeros((f, f, f, f, f))
    for i in range(f):
        for j in range(f):
            for k in range(f):
                for l in range(f):
                    for m in range(f):
                        for n in range(f): 
                            ac[i, j, k, l, m] = ac[i, j, k, l, m] + a[i, j, n] * c[n, k, l, m]
    acb = np.zeros((f, f, f, f, f))
    for i in range(f):
        for j in range(f):
            for k in range(f):
                for l in range(f):
                    for m in range(f):
                        for n in range(f):
                            for p in range(f):  
                                acb[i, j, k, l, m] = acb[i, j, k, l, m] + ac[i, n, p, j, k] * b[n, p, m, l]
    acbe = np.zeros((f, f, f, f))
    for i in range(f):
        for j in range(f):
            for k in range(f):
                for l in range(f):
                    for m in range(f):
                        for n in range(f):
                            acbe[i, j, k, l] = acbe[i, j, k, l] + acb[i, j, m, k, n] * e[n, m, l]
    acbed  = np.zeros((f, f, f))
    for i in range(f):
        for j in range(f):
            for k in range(f):
                for l in range(f):
                    for m in range(f):
                        acbed[i, j, k] =  acbed[i, j, k] + acbe[i, l, j, m] + d[m, l, k]
    return acbed

print(forr(a,b,c,d,e,f))
print(forr(a,b,c,d,e,f).shape)

start=time.time()
forr(a,b,c,d,e,f)
end=time.time()-start
print(f"Время для цикла for={end}")

"""2 Способ numpy"""

def RSH(a, b, c, d, e):
    AC = np.tensordot(a, c, axes=([2],[0]))
    ACB = np.tensordot(AC, b, axes=([1,2],[0,-1]))
    ACBE = np.tensordot(ACB, e, axes=([2,3],[1,0]))
    return np.tensordot(ACBE, d, axes=([1,2],[1,2]))

print(RSH(a,b,c,d,e))
print(RSH(a,b,c,d,e).shape)

start=time.time()
RSH(a,b,c,d,e)
end=time.time()-start
print(f"Время для цикла numpy={end}")

"""3 способ ncon"""

def nconn(a, b, c, d, e):
  return ncon((a, b, c, d, e), ([-1, 1, 5], [1, 6, 2, -2], [5, 6, 4, 7], [3, 4, -3], [2, 7, 3]))

print(nconn(a,b,c,d,e))
print(nconn(a,b,c,d,e).shape)

start=time.time()
nconn(a,b,c,d,e)
end=time.time()-start
print(f"Время для цикла ncon={end}")

"""цикл for самая долгая 
цикл с помoщью numpy самая быстрая 
цикл ncon самая простая в написании
"""